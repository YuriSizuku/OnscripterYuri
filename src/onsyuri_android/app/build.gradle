plugins {
    id 'com.android.application'
}

android {
    namespace 'com.yuri.onscripter'
    compileSdk 31
    ndkVersion '25.2.9519653'
    buildToolsVersion '33.0.2'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId "com.yuri.onscripter"
        minSdk 22
        targetSdk 31
        packagingOptions {
            // doNotStrip '**.so' // important for debug so
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments "-Wno-dev",  "-DANDROID_ARM_NEON=TRUE"
            }
        }
        versionCode 3
        versionName '0.7.4'
    }
    signingConfigs {
        release {
            def signPropsFile = file('sign.properties')
            storeFile file('sign.jks')
            if (signPropsFile.exists()) {
                Properties signProps = new Properties()
                signProps.load(new FileInputStream(signPropsFile))
                keyAlias signProps['SIGN_KEY_ALIAS']
                keyPassword signProps['SIGN_KEY_PASS']
                storePassword signProps['SIGN_STORE_PASS']
            }
            else {
                keyAlias System.getenv("SIGN_KEY_ALIAS")
                keyPassword System.getenv("SIGN_KEY_PASS")
                storePassword System.getenv("SIGN_STORE_PASS")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true // this may cause jni crash
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if(file('sign.properties').exists() || System.getenv("SIGN_KEY_ALIAS")) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            minifyEnabled false
            debuggable true
            if(file('sign.properties').exists() || System.getenv("SIGN_KEY_ALIAS")) {
                signingConfig signingConfigs.release
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['java']
            res.srcDirs = ['res']
        }
    }
    externalNativeBuild {
        cmake {
            version '3.22.1'
            path 'cpp/CMakeLists.txt'
            // this might be some problem with ninja
            // buildStagingDirectory './../../../build_android'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "onsyuri[${namespace}]_v${defaultConfig.versionName}.apk"
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}