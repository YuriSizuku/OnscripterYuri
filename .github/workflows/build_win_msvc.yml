name: build windows MSVC x86, x64, ARM32, ARM64
on:
  push: {tags:  ['v*']} #  Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
  
  pull_request: 

permissions:
  contents: write

jobs:
  build_i386:
    runs-on: windows-2022
    env:
      BUILD_TYPE: Release
      VCPKG_TRIPLET: x86-windows-static
      CMAKE_ARCH: Win32
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    
    - name: run vcpkg
      uses: lukka/run-vcpkg@v11.5
      with: 
        vcpkgGitCommitId: ce613c41372b23b1f51333815feb3edd87ef8a8b
        runVcpkgInstall: true
        prependedCacheKey: ${{env.VCPKG_TRIPLET}}
    
    - name: Set up CMake
      run: md build && cd build && cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TRIPLET}} -DVCPKG_BUILD_TYPE=release -G "Visual Studio 17 2022" -A ${{env.CMAKE_ARCH}}
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: onsyuri-${{env.VCPKG_TRIPLET}}
        path: ${{github.workspace}}/build/${{env.BUILD_TYPE}}
    
    - name: prepare release
      if: github.event_name == 'push'
      run: mv ${{github.workspace}}/build/${{env.BUILD_TYPE}}/onsyuri.exe ${{github.workspace}}/onsyuri_${{github.ref_name}}_x86_win.exe
      
    - name: create release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push'
      with:
        artifacts: ${{github.workspace}}/onsyuri_${{github.ref_name}}_x86_win.exe
        allowUpdates: "true"
        token: ${{secrets.GITHUB_TOKEN}}

  build_amd64:
    runs-on: windows-2022
    env:
      BUILD_TYPE: Release
      VCPKG_TRIPLET: x64-windows-static
      CMAKE_ARCH: x64
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    
    - name: run vcpkg
      uses: lukka/run-vcpkg@v10.7
      with: 
        vcpkgGitCommitId: ce613c41372b23b1f51333815feb3edd87ef8a8b
        runVcpkgFormatString: '[`install`, `--recurse`, `--clean-after-build`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `x64-windows-static`]'
        runVcpkgInstall: true
        prependedCacheKey: ${{env.VCPKG_TRIPLET}}
    
    - name: Set up CMake
      run: md build && cd build && cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TRIPLET}} -DVCPKG_BUILD_TYPE=release -G "Visual Studio 17 2022" -A ${{env.CMAKE_ARCH}}
  
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: onsyuri-${{env.VCPKG_TRIPLET}}
        path: ${{github.workspace}}/build/${{env.BUILD_TYPE}}
    
    - name: prepare release
      if: github.event_name == 'push'
      run: mv ${{github.workspace}}/build/${{env.BUILD_TYPE}}/onsyuri.exe ${{github.workspace}}/onsyuri_${{github.ref_name}}_amd64_win.exe
      
    - name: create release
      if: github.event_name == 'push'
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{github.workspace}}/onsyuri_${{github.ref_name}}_amd64_win.exe
        allowUpdates: "true"
        token: ${{secrets.GITHUB_TOKEN}}

  build_arm64:
    runs-on: windows-2022
    env:
      BUILD_TYPE: Release
      VCPKG_TRIPLET: arm64-windows-static
      CMAKE_ARCH: ARM64
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    
    - name: run vcpkg
      uses: lukka/run-vcpkg@v10.7
      with: 
        vcpkgGitCommitId: ce613c41372b23b1f51333815feb3edd87ef8a8b
        runVcpkgFormatString: '[`install`, `--recurse`, `--clean-after-build`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `${{env.VCPKG_TRIPLET}}`, `--allow-unsupported`]'
        runVcpkgInstall: true
        prependedCacheKey: ${{env.VCPKG_TRIPLET}}
    
    - name: Set up CMake
      run: md build && cd build && cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TRIPLET}} -DVCPKG_BUILD_TYPE=release -DVCPKG_INSTALL_OPTIONS="--allow-unsupported" -G "Visual Studio 17 2022" -A ${{env.CMAKE_ARCH}}
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: onsyuri-${{env.VCPKG_TRIPLET}}
        path: ${{github.workspace}}/build/${{env.BUILD_TYPE}}
    
    - name: prepare release
      if: github.event_name == 'push'
      run: mv ${{github.workspace}}/build/${{env.BUILD_TYPE}}/onsyuri.exe ${{github.workspace}}/onsyuri_${{github.ref_name}}_arm64_win.exe
      
    - name: create release
      if: github.event_name == 'push'
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{github.workspace}}/onsyuri_${{github.ref_name}}_arm64_win.exe
        allowUpdates: "true"
        token: ${{secrets.GITHUB_TOKEN}}

  # build_arm32:
  #   runs-on: windows-2022
  #   env:
  #     BUILD_TYPE: Release
  #     VCPKG_TRIPLET: arm-windows-static
  #     CMAKE_ARCH: ARM
  #   defaults:
  #     run:
  #       working-directory: ${{github.workspace}}
  #   steps:
  #   - name: checkout code
  #     uses: actions/checkout@v3
    
  #   # - name: run vcpkg
  #   #   uses: lukka/run-vcpkg@v10.7
  #   #   with: 
  #   #     vcpkgGitCommitId: 903956eff7cb94774a9e805ff573c000afc43e3e
  #   #     runVcpkgFormatString: '[`install`, `--recurse`, `--clean-after-build`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `${{env.VCPKG_TRIPLET}}`, `--allow-unsupported`]'
  #   #     runVcpkgInstall: true
  #   #     prependedCacheKey: ${{env.VCPKG_TRIPLET}}

  #   - name: Setup MSVC ARM environment
  #     shell: cmd
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64_arm 10.0.22621.0
  #       set WindowsSdkDir=C:\Program Files (x86)\Windows Kits\10\
  #       set WindowsSdkVersion=10.0.22621.0
  #       echo WindowsSdkDir=%WindowsSdkDir%
  #       echo WindowsSdkVersion=%WindowsSdkVersion%

  #   - name: Run vcpkg install manually
  #     shell: cmd
  #     run: |
  #       set WindowsSdkDir=C:\Program Files (x86)\Windows Kits\10\
  #       set WindowsSdkVersion=10.0.22621.0
  #       echo WindowsSdkDir=%WindowsSdkDir%
  #       echo WindowsSdkVersion=%WindowsSdkVersion%
  #       vcpkg install --recurse --clean-after-build --x-install-root D:/a/OnscripterYuriRT/b/vcpkg_installed --triplet arm-windows-static --allow-unsupported
 
  #   - name: Set up CMake
  #     run: md build && cd build && cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TRIPLET}} -DVCPKG_BUILD_TYPE=release -DVCPKG_INSTALL_OPTIONS="--allow-unsupported" -G "Visual Studio 17 2022" -A ${{env.CMAKE_ARCH}}
      
  #   - name: Build
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
  #   - name: Upload artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: onsyuri-${{env.VCPKG_TRIPLET}}
  #       path: ${{github.workspace}}/build/${{env.BUILD_TYPE}}
    
  #   - name: prepare release
  #     run: mv ${{github.workspace}}/build/${{env.BUILD_TYPE}}/onsyuri.exe ${{github.workspace}}/onsyuri_${{github.ref_name}}_arm_win.exe
      
  #   - name: create release
  #     uses: ncipollo/release-action@v1
  #     with:
  #       artifacts: ${{github.workspace}}/onsyuri_${{github.ref_name}}_arm_win.exe
  #       allowUpdates: "true"
  #       token: ${{secrets.GITHUB_TOKEN}}
  # build_arm32:
  #   runs-on: windows-2022
  #   env:
  #     BUILD_TYPE: Release
  #     VCPKG_TRIPLET: arm-windows-static
  #     CMAKE_ARCH: ARM
  #     WINSDK_VERSION: 10.0.22621.0
  #   defaults:
  #     run:
  #       working-directory: ${{github.workspace}}
  #       shell: cmd
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  
  #   - name: Setup ARM32 environment
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64_arm %WINSDK_VERSION%
        
  #       :: 设置环境变量
  #       setx WindowsSdkDir "C:\Program Files (x86)\Windows Kits\10"
  #       setx WindowsSdkVersion %WINSDK_VERSION%
  #       setx WindowsTargetPlatformVersion %WINSDK_VERSION%
  #       setx CMAKE_SYSTEM_VERSION 10.0.22621.0
  #       set WindowsSdkDir=C:\Program Files (x86)\Windows Kits\10
  #       set WindowsSdkVersion=%WINSDK_VERSION%
  #       set WindowsTargetPlatformVersion=%WINSDK_VERSION%
  #       set CMAKE_SYSTEM_VERSION=10.0.22621.0

  #       where cl
        
  #       set VCPKG_KEEP_ENV_VARS=VCINSTALLDIR;WindowsSDKVersion;CMAKE_SYSTEM_VERSION;VCToolsVersion

  #       rem dir "%WindowsSdkDir%\Lib\%WINSDK_VERSION%\um\arm\kernel32.lib"

  #       :: 使用覆盖三元组参数
  #       vcpkg install --triplet %VCPKG_TRIPLET% --clean-after-build ^
  #         --overlay-triplets=triplets ^
  #         --allow-unsupported
  
  #   - name: Configure CMake
  #     run: |
  #       call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64_arm %WINSDK_VERSION%
          
  #       :: 设置环境变量
  #       setx WindowsSdkDir "C:\Program Files (x86)\Windows Kits\10"
  #       setx WindowsSdkVersion %WINSDK_VERSION%
  #       setx WindowsTargetPlatformVersion %WINSDK_VERSION%
  #       set WindowsSdkDir=C:\Program Files (x86)\Windows Kits\10
  #       set WindowsSdkVersion=%WINSDK_VERSION%
  #       set WindowsTargetPlatformVersion=%WINSDK_VERSION%
        
  #       :: 验证环境
  #       echo VCINSTALLDIR=%VCINSTALLDIR%
  #       dir "%WindowsSdkDir%\Lib\%WINSDK_VERSION%\um\arm\kernel32.lib"
  #       cmake -B build -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ^
  #         -DCMAKE_TOOLCHAIN_FILE="${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake" ^
  #         -DVCPKG_TARGET_TRIPLET=%VCPKG_TRIPLET% ^
  #         -DCMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION=%WINSDK_VERSION% ^
  #         -G "Visual Studio 17 2022" -A %CMAKE_ARCH% ^
  #         -DCMAKE_SYSTEM_VERSION=%WINSDK_VERSION% ^

  
  #   - name: Build project
  #     run: cmake --build build --config %BUILD_TYPE%
  
  #   # ...后续步骤不变...
  #   - name: Prepare release artifact
  #     run: |
  #       copy build\%BUILD_TYPE%\onsyuri.exe onsyuri_${{github.ref_name}}_arm_win.exe
  
  #   - name: Upload artifact
  #     if: always()
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: onsyuri-arm32
  #       path: |
  #         ${{github.workspace}}/build/${{env.BUILD_TYPE}}
  #       # C:\vcpkg\buildtrees\**\*.log
  #       # C:\vcpkg\buildtrees\**\*.txt
    
  #   - name: Create release
  #     uses: ncipollo/release-action@v1
  #     with:
  #       artifacts: ${{github.workspace}}/onsyuri_${{github.ref_name}}_arm_win.exe
  #       allowUpdates: true
  #       token: ${{secrets.GITHUB_TOKEN}}